/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package master;

import hms.HMS101;
import hms.HMSHome;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import support.Library;
import support.PickList;

/**
 *
 * @author Lenovo
 */
public class ContractMaster extends javax.swing.JInternalFrame {

    PickList acPickList = null;
    Connection dataConnection = HMS101.connMpAdmin;
    Library lb = new Library();
    DefaultTableModel dtm = null;
    DefaultTableModel listModel = null;

    int form_cd = -1;

    /**
     * Creates new form ContractMaster
     */
    public ContractMaster(int form_cd) {
        initComponents();
        this.form_cd = form_cd;
        acPickList = new PickList(dataConnection);
        acPickList.setLayer(this.getLayeredPane());
        dtm = (DefaultTableModel) jTable1.getModel();
        listModel = (DefaultTableModel) jTable2.getModel();
        addInitialData();
    }

    @Override
    public void dispose() {
        try {
            HMSHome.removeFromScreen(HMSHome.tabbedPane.getSelectedIndex());
            super.dispose();
        } catch (Exception ex) {
            lb.printToLogFile("Exception at dispose at city master", ex);
        }
    }

    private boolean validateRow() {
        if (!lb.isExist("acntmst", "ac_alias", jtxtDocAlias.getText(), dataConnection)) {
            jtxtDoctor.requestFocusInWindow();
            lb.showMessageDailog("Please select valid consultant doctor");
            return false;
        }

        return true;
    }

    private void addInitialData() {
        try {
            String sql = "select distinct(id) from conttemp";
            PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
            ResultSet rsLocal = pstLocal.executeQuery();
            jcmbOldContract.addItem("");
            while (rsLocal.next()) {
                jcmbOldContract.addItem(rsLocal.getInt(1));
            }
        } catch (Exception ex) {
            lb.printToLogFile("Exception at addInitial Data ad OPDBillGeneration", ex);
        }
    }

    private void updateRate(String rate, String bill_item_cd) {
        try {
            String sql = "update billitemmst set def_rate=?,user_id=?,edit_no=edit_no+1,time_stamp=CURRENT_TIMESTAMP where bill_item_cd=?";
            PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
            pstLocal.setString(1, rate);
            pstLocal.setInt(2, HMSHome.user_id);
            pstLocal.setString(3, bill_item_cd);
            pstLocal.executeUpdate();
            lb.showMessageDailog("Rate has been updated");
        } catch (Exception ex) {
            lb.printToLogFile("Update Rate", ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtxtDoctor = new javax.swing.JTextField();
        jtxtDocAlias = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jcmbOldContract = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "bill_item_cd", "Item Name", "Sale Rate", "Percentage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel2.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jLabel7.setText("Doctor Name");

        jtxtDoctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtDoctorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtDoctorFocusLost(evt);
            }
        });
        jtxtDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtDoctorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDoctorKeyReleased(evt);
            }
        });

        jButton1.setText("Load Old Contract");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Create New Contract");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Load New Items");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Delete Contract");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("Contract Number");

        jButton6.setText("Update Contract");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtDocAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcmbOldContract, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jButton6))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDocAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jButton6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcmbOldContract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtDoctorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctorFocusGained
        // TODO add your handling code here:
        lb.selectAll(evt);
    }//GEN-LAST:event_jtxtDoctorFocusGained

    private void jtxtDoctorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctorFocusLost
        // TODO add your handling code here:
        lb.toUpper(evt);
    }//GEN-LAST:event_jtxtDoctorFocusLost

    private void jtxtDoctorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctorKeyPressed
        acPickList.setPickListComponent(jtxtDoctor);
        acPickList.setNextComponent(jButton1);
        acPickList.setLocation(jtxtDoctor.getX(), jtxtDoctor.getY() + jtxtDoctor.getHeight());
        acPickList.setReturnComponent(new JTextField[]{jtxtDoctor, jtxtDocAlias});
        acPickList.pickListKeyPress(evt);
    }//GEN-LAST:event_jtxtDoctorKeyPressed

    private void jtxtDoctorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctorKeyReleased
        // TODO add your handling code here:
        try {
            PreparedStatement psLocal = dataConnection.prepareStatement("SELECT ac_name,ac_alias FROM acntmst "
                    + " WHERE ac_cd IN (SELECT ac_cd FROM doctormaster) and  "
                    + " ac_name like  '%" + jtxtDoctor.getText().toUpperCase() + "%'");
            acPickList.setPreparedStatement(psLocal);
            acPickList.setFirstAssociation(new int[]{0, 1, 2});
            acPickList.setSecondAssociation(new int[]{0, 1, 2});
            acPickList.pickListKeyRelease(evt);
        } catch (Exception ex) {
            lb.printToLogFile("Error at txtcityKeyReleased in account master", ex);
        }
    }//GEN-LAST:event_jtxtDoctorKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (validateRow()) {
            try {
                String sql = "SELECT DISTINCT cont_date FROM contractmst WHERE ac_cd=" + lb.getAcCode(jtxtDocAlias.getText(), "AC");
                PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                ResultSet rsLocal = pstLocal.executeQuery();
                listModel.setRowCount(0);
                dtm.setRowCount(0);
                while (rsLocal.next()) {
                    Vector row = new Vector();
                    row.add(lb.ConvertDateFormetForDisply(rsLocal.getString("cont_date")));
                    listModel.addRow(row);
                }
            } catch (Exception ex) {
                lb.printToLogFile("Excepion at load Date in contract master", ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (validateRow()) {
            DateSelect ds = new DateSelect(null, true);
            ds.show();
            if (ds.returnStatus == DateSelect.RET_OK) {
                Vector row = new Vector();
                row.add(ds.jtxtFromDate.getText());
                listModel.addRow(row);
                jTable2.setRowSelectionInterval(listModel.getRowCount() - 1, listModel.getRowCount() - 1);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            if (validateRow()) {
                int row = jTable2.getSelectedRow();
                if (row != -1) {
                    try {
                        String sql = "SELECT c.bill_item_cd,b.def_rate,cont_per,b.bill_item_name FROM contractmst c LEFT JOIN billitemmst b ON "
                                + " c.bill_item_cd=b.bill_item_cd where c.cont_date='" + lb.ConvertDateFormetForDB(jTable2.getValueAt(row, 0).toString()) + "'"
                                + " and c.ac_cd=" + lb.getAcCode(jtxtDocAlias.getText(), "AC");
                        PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                        ResultSet rsLocal = pstLocal.executeQuery();
                        dtm.setRowCount(0);
                        while (rsLocal.next()) {
                            Vector row1 = new Vector();
                            row1.add(rsLocal.getString("bill_item_Cd"));
                            row1.add(rsLocal.getString("bill_item_name"));
                            row1.add(rsLocal.getString("def_rate"));
                            row1.add(rsLocal.getString("cont_per"));
                            dtm.addRow(row1);
                        }
                    } catch (Exception ex) {
                        lb.printToLogFile("Exception at load contract date wise", ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            if (validateRow()) {
                int row = jTable1.getSelectedRow();
                int column = jTable1.getSelectedColumn();
                if (row != -1) {
                    String message = "Enter Percentage";
                    if (column == 2) {
                        message = "Enter Rate";
                    }
                    double rate = lb.isNumber(JOptionPane.showInputDialog(message));
                    try {
                        if (rate != 0) {
                            jTable1.setValueAt(rate, row, column);
                        }
                        if (column == 2) {
                            if (rate != 0) {
                                updateRate(lb.Convert2DecFmtForRs(rate), jTable1.getValueAt(row, 0).toString());
                            }
                        }
                    } catch (Exception ex) {
                        lb.printToLogFile("Update contract exception", ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (validateRow()) {
            try {
                String sql = "SELECT * FROM billitemmst b WHERE "
                        + " b.bill_item_cd in (select bill_item_cd from conttemp where id=" + jcmbOldContract.getSelectedItem().toString() + ")";
                PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                ResultSet rsLocal = pstLocal.executeQuery();
                boolean flag = false;
                while (rsLocal.next()) {
                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        if (jTable1.getValueAt(i, 0).toString().equalsIgnoreCase(rsLocal.getString("bill_item_Cd"))) {
                            flag = true;
                            break;
                        }
                    }
                    if (!flag) {
                        Vector row = new Vector();
                        row.add(rsLocal.getString("bill_item_cd"));
                        row.add(rsLocal.getString("bill_item_name"));
                        row.add(rsLocal.getString("def_rate"));
                        row.add(0.00);
                        dtm.addRow(row);
                    } else {
                        flag = false;
                    }
                }
            } catch (SQLException ex) {
                lb.printToLogFile("Exception at create new contract", ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (validateRow()) {
            lb.confirmDialog("Do you want to delete this contract?");
            if (lb.type) {
                try {
                    dataConnection.setAutoCommit(false);
                    String sql = "delete from contractmst where cont_date='" + lb.ConvertDateFormetForDB(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString()) + "'"
                            + "  and ac_cd=" + lb.getAcCode(jtxtDocAlias.getText(), "AC");
                    PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.executeUpdate();
                    dataConnection.commit();
                    dataConnection.setAutoCommit(true);
                    jButton1.doClick();
                } catch (SQLException ex) {
                    lb.printToLogFile("Exception at create new contract", ex);
                    try {
                        dataConnection.rollback();
                        dataConnection.setAutoCommit(true);
                    } catch (Exception e) {

                    }
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (validateRow()) {
            int row = jTable2.getSelectedRow();
            if (row != -1) {
                try {
                    dataConnection.setAutoCommit(false);
                    String sql = "delete from contractmst where ac_cd=? and cont_date=?";
                    PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, lb.getAcCode(jtxtDocAlias.getText(), "AC"));
                    pstLocal.setString(2, lb.ConvertDateFormetForDB(jTable2.getValueAt(row, 0).toString()));
                    pstLocal.execute();

                    sql = "insert into contractmst (ac_cd,bill_item_cd,cont_date,def_rate,cont_per) values (?,?,?,?,?)";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, lb.getAcCode(jtxtDocAlias.getText(), "AC"));
                    pstLocal.setString(3, lb.ConvertDateFormetForDB(jTable2.getValueAt(row, 0).toString()));
                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        pstLocal.setString(2, jTable1.getValueAt(i, 0).toString());
                        pstLocal.setDouble(4, lb.isNumber(jTable1.getValueAt(i, 2).toString()));
                        pstLocal.setDouble(5, lb.isNumber(jTable1.getValueAt(i, 3).toString()));
                        pstLocal.executeUpdate();
                    }
                    dataConnection.commit();
                    dataConnection.setAutoCommit(true);
                    lb.showMessageDailog("Conract update Successfully");
                } catch (Exception ex) {
                    lb.printToLogFile("Exception at generate Contract", ex);
                    try {
                        dataConnection.rollback();
                        dataConnection.setAutoCommit(true);
                    } catch (Exception e) {

                    }
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox jcmbOldContract;
    private javax.swing.JTextField jtxtDocAlias;
    private javax.swing.JTextField jtxtDoctor;
    // End of variables declaration//GEN-END:variables
}
