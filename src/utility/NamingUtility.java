/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utility;

import hms.HMS101;
import hms.HMSHome;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JTextField;
import master.AccountMaster;
import support.Library;
import support.PickList;

/**
 *
 * @author bhaumik
 */
public class NamingUtility extends javax.swing.JInternalFrame {

    Library lb = new Library();
    Connection dataConnection = HMS101.connMpAdmin;
    PickList acPickList = null;

    /**
     * Creates new form NamingUtility
     */
    public NamingUtility() {
        initComponents();
        acPickList = new PickList(dataConnection);
        acPickList.setLayer(this.getLayeredPane());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jtxtDoctor = new javax.swing.JTextField();
        jtxtDocAlias = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxtDoctor1 = new javax.swing.JTextField();
        jtxtDocAlias1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel7.setText("Main Doctor Name");

        jtxtDoctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtDoctorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtDoctorFocusLost(evt);
            }
        });
        jtxtDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtDoctorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDoctorKeyReleased(evt);
            }
        });

        jLabel8.setText("Duplicate Doctor Name");

        jtxtDoctor1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtDoctor1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtDoctor1FocusLost(evt);
            }
        });
        jtxtDoctor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtDoctor1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDoctor1KeyReleased(evt);
            }
        });

        jButton1.setText("Replace");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtDoctor1)
                                    .addComponent(jtxtDoctor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtDocAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jtxtDocAlias1))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDocAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDoctor1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDocAlias1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtDoctorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctorFocusGained
        // TODO add your handling code here:
        lb.selectAll(evt);
    }//GEN-LAST:event_jtxtDoctorFocusGained

    private void jtxtDoctorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctorFocusLost
        // TODO add your handling code here:
        lb.toUpper(evt);
    }//GEN-LAST:event_jtxtDoctorFocusLost

    private void jtxtDoctorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctorKeyPressed
        acPickList.setPickListComponent(jtxtDoctor);
        acPickList.setNextComponent(jtxtDoctor1);
        acPickList.setLocation(jtxtDoctor.getX(), jtxtDoctor.getY() + jtxtDoctor.getHeight());
        acPickList.setReturnComponent(new JTextField[]{jtxtDoctor, jtxtDocAlias});
        acPickList.pickListKeyPress(evt);
    }//GEN-LAST:event_jtxtDoctorKeyPressed

    private void jtxtDoctorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctorKeyReleased
        // TODO add your handling code here:
        try {
            PreparedStatement psLocal = dataConnection.prepareStatement("SELECT ac_name,ac_alias,s.spec_sub_name FROM acntmst a "
                    + " LEFT JOIN doctormaster d ON a.ac_cd=d.ac_cd LEFT JOIN specsubmst s ON d.sub_spec_cd=s.spec_sub_cd "
                    + " WHERE a.ac_cd IN (SELECT ac_cd FROM doctormaster) and  "
                    + " ac_name like  '%" + jtxtDoctor.getText().toUpperCase() + "%'");
            acPickList.setPreparedStatement(psLocal);
            acPickList.setFirstAssociation(new int[]{0, 1, 2});
            acPickList.setSecondAssociation(new int[]{0, 1, 2});
            acPickList.pickListKeyRelease(evt);
        } catch (Exception ex) {
            lb.printToLogFile("Error at txtcityKeyReleased in account master", ex);
        }
    }//GEN-LAST:event_jtxtDoctorKeyReleased

    private void jtxtDoctor1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctor1FocusGained
        // TODO add your handling code here:
        lb.selectAll(evt);
    }//GEN-LAST:event_jtxtDoctor1FocusGained

    private void jtxtDoctor1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDoctor1FocusLost
        // TODO add your handling code here:
        lb.toUpper(evt);
    }//GEN-LAST:event_jtxtDoctor1FocusLost

    private void jtxtDoctor1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctor1KeyPressed
        acPickList.setPickListComponent(jtxtDoctor1);
        acPickList.setNextComponent(jButton1);
        acPickList.setLocation(jtxtDoctor1.getX(), jtxtDoctor1.getY() + jtxtDoctor1.getHeight());
        acPickList.setReturnComponent(new JTextField[]{jtxtDoctor1, jtxtDocAlias1});
        acPickList.pickListKeyPress(evt);
    }//GEN-LAST:event_jtxtDoctor1KeyPressed

    private void jtxtDoctor1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDoctor1KeyReleased
        // TODO add your handling code here:
        try {
            PreparedStatement psLocal = dataConnection.prepareStatement("SELECT ac_name,ac_alias,s.spec_sub_name FROM acntmst a "
                    + " LEFT JOIN doctormaster d ON a.ac_cd=d.ac_cd LEFT JOIN specsubmst s ON d.sub_spec_cd=s.spec_sub_cd "
                    + " WHERE a.ac_cd IN (SELECT ac_cd FROM doctormaster) and  "
                    + " ac_name like  '%" + jtxtDoctor1.getText().toUpperCase() + "%'");
            acPickList.setPreparedStatement(psLocal);
            acPickList.setFirstAssociation(new int[]{0, 1, 2});
            acPickList.setSecondAssociation(new int[]{0, 1, 2});
            acPickList.pickListKeyRelease(evt);
        } catch (Exception ex) {
            lb.printToLogFile("Error at txtcityKeyReleased in account master", ex);
        }
    }//GEN-LAST:event_jtxtDoctor1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jtxtDocAlias.setText("");
        jtxtDocAlias1.setText("");
        jtxtDoctor.setText("");
        jtxtDoctor1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!jtxtDocAlias.getText().toString().trim().equalsIgnoreCase(jtxtDocAlias1.getText().toString().trim())) {
            String from_ac_cd = lb.getAcCode(jtxtDocAlias1.getText(), "AC");
            String to_ac_cd = lb.getAcCode(jtxtDocAlias.getText(), "AC");

            if (!from_ac_cd.equalsIgnoreCase(to_ac_cd) && !from_ac_cd.isEmpty() && !to_ac_cd.isEmpty()) {
                try {
                    dataConnection.setAutoCommit(false);

                    String sql = "update appointmentmst set cons_doc=? where cons_doc=?";
                    PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdbilldt set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdbilldtlg  set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreg set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreg set ref_doc_cd=? where ref_doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreghide set ref_doc_cd=? where ref_doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreghide set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreglg set ref_doc_cd=? where ref_doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update ipdreglg set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdbilldt set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdbilldtlg set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdbillhd set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdbillhdlg set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdhidedt set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update opdhidehd set doc_cd=? where doc_cd=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update patientmst  set ref_by=? where ref_by=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    sql = "update patientmst  set con_doc=? where con_doc=?";
                    pstLocal = dataConnection.prepareStatement(sql);
                    pstLocal.setString(1, to_ac_cd);
                    pstLocal.setString(2, from_ac_cd);
                    pstLocal.executeUpdate();

                    AccountMaster am = new AccountMaster(-1);
                    am.setId(from_ac_cd);
                    am.navLoad.callDelete();
                    
                    dataConnection.commit();
                    dataConnection.setAutoCommit(true);
                } catch (Exception ex) {
                    try {
                        dataConnection.rollback();
                        dataConnection.setAutoCommit(true);
                    } catch (Exception e) {

                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    @Override
    public void dispose() {
        try {
            HMSHome.removeFromScreen(HMSHome.tabbedPane.getSelectedIndex());
            super.dispose();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jtxtDocAlias;
    private javax.swing.JTextField jtxtDocAlias1;
    private javax.swing.JTextField jtxtDoctor;
    private javax.swing.JTextField jtxtDoctor1;
    // End of variables declaration//GEN-END:variables
}
