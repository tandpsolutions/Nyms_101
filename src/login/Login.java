/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import hms.HMS101;
import static hms.HMS101.connMpAdmin;
import static hms.HMS101.database;
import static hms.HMS101.ip;
import static hms.HMS101.port;
import static hms.HMS101.pwd;
import static hms.HMS101.username;
import hms.HMSHome;
import java.io.File;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.swing.JOptionPane;
import support.Library;
import utility.CronScheduler;

/**
 *
 * @author Bhaumik
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setTitle("Login");
    }

    private int checkLogin(String userName, String password) {
        try {
            Connection dataConnection = HMS101.connMpAdmin;
            String sql = "SELECT * FROM login WHERE user_name=? AND PASSWORD = MD5(?)";
            PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
            pstLocal.setString(1, userName);
            pstLocal.setString(2, password);
            ResultSet rsLocal = pstLocal.executeQuery();
            if (rsLocal.next()) {
                return rsLocal.getInt("user_id");
            }
        } catch (Exception ex) {
            Library lb = new Library();
            lb.printToLogFile("Exception at check login", ex);
        }
        return -1;
    }

    private static boolean connectToDatabase() {
        File f = new File("system.properties");
        Properties properties = null;
        try {
            if (f.exists()) {
                properties = new Properties();
                properties.load(new FileReader(f));
                ip = properties.getProperty("dbHost");
                pwd = properties.getProperty("password");
                Class.forName("org.gjt.mm.mysql.Driver");
                connMpAdmin = DriverManager.getConnection("jdbc:mysql://" + ip + ":" + port + "/" + database + "?sessionVariables=sql_mode=''&user=" + username + "&password=" + pwd + "&autoReconnect=true");
//                loadReport();
                return true;
            } else {
                System.out.println("system.properties not found.");
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtPassword = new javax.swing.JPasswordField();
        jbtnLogin = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User Name");

        jtxtUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtUserNameFocusGained(evt);
            }
        });
        jtxtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtUserNameKeyPressed(evt);
            }
        });

        jLabel2.setText("Password");

        jtxtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtPasswordFocusGained(evt);
            }
        });
        jtxtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtPasswordKeyPressed(evt);
            }
        });

        jbtnLogin.setMnemonic('L');
        jbtnLogin.setText("Login");
        jbtnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoginActionPerformed(evt);
            }
        });
        jbtnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnLoginKeyPressed(evt);
            }
        });

        jbtnExit.setMnemonic('E');
        jbtnExit.setText("Exit");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jtxtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnLogin)
                    .addComponent(jbtnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jtxtUserName});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jtxtPassword});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.confirmDialog("Do you want to exit from system?");
        if (lb.type) {
            System.exit(1);
        }
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoginActionPerformed
        // TODO add your handling code here:

        database = "nyms1017";
        if (connectToDatabase()) {
            int user_id = checkLogin(jtxtUserName.getText(), jtxtPassword.getText());
            if (user_id != -1) {
                HMSHome mh = new HMSHome();
                mh.setVisible(true);
                mh.setTitle("H.M.S Ver : 1.0.1." + hms.HMS101.ver + " User : " + jtxtUserName.getText());
                mh.user_id = user_id;
                Library lb = new Library();
                mh.role = (int) lb.isNumber(lb.getData("user_grp", "login", "user_id", user_id + "", 1));
                mh.setUserRights();
                try {
                    String sql = "select * from branchmst";
                    Connection dataConnection = HMS101.connMpAdmin;
                    PreparedStatement pstLocal = dataConnection.prepareStatement(sql);
                    ResultSet rsLocal = pstLocal.executeQuery();
                    if (rsLocal.next()) {
                        HMSHome.clsSysInfo.setBRANCH_CD(rsLocal.getInt("BRANCH_CD"));
                        HMSHome.clsSysInfo.setBRANCH_NAME(rsLocal.getString("BRANCH_NAME"));
                        HMSHome.clsSysInfo.setCMPN_NAME(rsLocal.getString("CMPN_NAME"));
                        HMSHome.clsSysInfo.setADDRESS1(rsLocal.getString("ADDRESS1"));
                        HMSHome.clsSysInfo.setADDRESS2(rsLocal.getString("ADDRESS2"));
                        HMSHome.clsSysInfo.setADDRESS3(rsLocal.getString("ADDRESS3"));
                        HMSHome.clsSysInfo.setMOBILE(rsLocal.getString("MOBILE"));
                        HMSHome.clsSysInfo.setEMAIL(rsLocal.getString("EMAIL"));
                        HMSHome.clsSysInfo.setTIN_NO(rsLocal.getString("TIN_NO"));
                    }
                    this.dispose();
                    CronScheduler.main(null);
                } catch (Exception ex) {
                    lb.showMessageDailog("Could not load Data.\n Please Contact system administrator.");
                    System.exit(0);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Username or password invalid");
            }
        }
    }//GEN-LAST:event_jbtnLoginActionPerformed

    private void jtxtUserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtUserNameFocusGained
        // TODO add your handling code here:
        Library lb = new Library();
        lb.selectAll(evt);
    }//GEN-LAST:event_jtxtUserNameFocusGained

    private void jtxtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtUserNameKeyPressed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.enterFocus(evt, jtxtPassword);
    }//GEN-LAST:event_jtxtUserNameKeyPressed

    private void jtxtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtPasswordFocusGained
        // TODO add your handling code here:
        Library lb = new Library();
        lb.selectAll(evt);
    }//GEN-LAST:event_jtxtPasswordFocusGained

    private void jtxtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPasswordKeyPressed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.enterFocus(evt, jbtnLogin);
    }//GEN-LAST:event_jtxtPasswordKeyPressed

    private void jbtnLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnLoginKeyPressed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.enterClick(evt);
    }//GEN-LAST:event_jbtnLoginKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnLogin;
    private javax.swing.JPasswordField jtxtPassword;
    private javax.swing.JTextField jtxtUserName;
    // End of variables declaration//GEN-END:variables
}
